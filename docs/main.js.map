{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/cart/cart.module.ts","webpack:///./src/app/cart/components/cart/cart.component.css","webpack:///./src/app/cart/components/cart/cart.component.html","webpack:///./src/app/cart/components/cart/cart.component.ts","webpack:///./src/app/cart/state/cart.model.ts","webpack:///./src/app/cart/state/cart.query.ts","webpack:///./src/app/cart/state/cart.service.ts","webpack:///./src/app/cart/state/cart.store.ts","webpack:///./src/app/product/components/product-list/product-list.component.css","webpack:///./src/app/product/components/product-list/product-list.component.html","webpack:///./src/app/product/components/product-list/product-list.component.ts","webpack:///./src/app/product/components/product/product.component.css","webpack:///./src/app/product/components/product/product.component.html","webpack:///./src/app/product/components/product/product.component.ts","webpack:///./src/app/product/product.module.ts","webpack:///./src/app/product/state/index.ts","webpack:///./src/app/product/state/product.model.ts","webpack:///./src/app/product/state/product.query.ts","webpack:///./src/app/product/state/product.service.ts","webpack:///./src/app/product/state/product.store.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \":host {\\r\\n  display: block;\\r\\n  margin: 1rem;\\r\\n}\\r\\n\\r\\nh1{\\r\\n  text-align: center;\\r\\n}\\r\\n\"","module.exports = \"<h1 class=\\\"title is-1\\\">{{ title }}</h1>\\r\\n<ng-container *ngIf=\\\"(loading$ | async); else: app\\\">\\r\\n  <span class=\\\"icon\\\"> <i class=\\\"fas fa-spinner fa-pulse\\\"></i> </span>\\r\\n  <p>loading cools stuffs ...</p>\\r\\n</ng-container>\\r\\n<ng-template #app>\\r\\n  <ae-product-list></ae-product-list>\\r\\n  <ae-cart></ae-cart>\\r\\n</ng-template>\\r\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { ProductQuery } from './product/state';\n\n@Component({\n  selector: 'ae-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  title = 'akita-example';\n  loading$: Observable<boolean>;\n\n  constructor(\n    private _productQuery: ProductQuery,\n  ) {}\n\n  ngOnInit(): void {\n    this.loading$ = this._productQuery.selectLoading();\n  }\n}\n","import { CartModule } from './cart/cart.module';\nimport { LOCALE_ID, NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { AppComponent } from './app.component';\nimport { ProductModule } from './product/product.module';\nimport { registerLocaleData } from '@angular/common';\nimport localeEs from '@angular/common/locales/es';\n\nregisterLocaleData(localeEs, 'es');\n@NgModule({\n  declarations: [AppComponent],\n  imports: [BrowserModule, ProductModule, CartModule],\n  providers: [{ provide: LOCALE_ID, useValue: 'es' }],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { CartComponent } from './components/cart/cart.component';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [CartComponent],\n  exports: [CartComponent]\n})\nexport class CartModule { }\n","module.exports = \":host{\\r\\n  display: inline-block;\\r\\n}\\r\\n\"","module.exports = \"<div>\\n  <h2 class=\\\"title is-2\\\">Items in Cart {{ cartLength }}</h2>\\n</div>\\n<pre>\\n  {{ cart$ | async | json: 2 }}\\n</pre>\\n\"","import { CartItem } from './../../state/cart.model';\nimport { CartQuery } from './../../state/cart.query';\nimport { Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\n@Component({\n  selector: 'ae-cart',\n  templateUrl: './cart.component.html',\n  styleUrls: ['./cart.component.css']\n})\nexport class CartComponent implements OnInit {\n  cart$: Observable<CartItem[]>;\n  cartLength: number;\n\n  constructor(private _cartQuery: CartQuery) {}\n\n  ngOnInit() {\n    this.cart$ = this._cartQuery.selectAll();\n    this.cart$\n      .pipe(filter(cart => cart.length > 0))\n      .subscribe(\n        cart =>\n          (this.cartLength = cart\n            .map(ci => ci.quantity)\n            .reduce((q0, q1) => q0 + q1))\n      );\n  }\n}\n","import { Product } from './../../product/state/product.model';\r\n\r\nexport interface CartItem {\r\n  productId: Product['id'];\r\n  quantity: number;\r\n  total: number;\r\n  price: number;\r\n}\r\n\r\nexport function createCartItem(params: Partial<CartItem>) {\r\n  const total = getPrice(params);\r\n  return {\r\n    total,\r\n    quantity: 1,\r\n    ...params\r\n  } as CartItem;\r\n}\r\n\r\nfunction getPrice(params: Partial<CartItem>): Number {\r\n  if (!params) {\r\n    return 0;\r\n  }\r\n  const quantity = params.quantity || 1;\r\n  return params.price ? params.price * quantity : 0;\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { QueryEntity } from '@datorama/akita';\r\nimport { CartStore, CartState } from './cart.store';\r\nimport { CartItem } from './cart.model';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class CartQuery extends QueryEntity<CartState, CartItem> {\r\n  constructor(protected store: CartStore) {\r\n    super(store);\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Product } from './../../product/state/product.model';\r\nimport { CartQuery } from './cart.query';\r\nimport { CartStore } from './cart.store';\r\nimport { createCartItem } from './cart.model';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class CartService {\r\n  constructor(\r\n    private _cartQuery: CartQuery,\r\n    private _cartStore: CartStore,\r\n    private _http: HttpClient\r\n  ) {}\r\n\r\n  get() {\r\n    // this.http.get().subscribe((entities: ServerResponse) => {\r\n    // this.cartStore.set(entities);\r\n    // });\r\n  }\r\n\r\n  addProdcutToCart(product: Product) {\r\n    const productId = product.id;\r\n    const price = product.price;\r\n    const findCartItem = this._cartQuery.getEntity(productId);\r\n    if (findCartItem) {\r\n      return this._cartStore.updateQuantity(productId);\r\n    }\r\n    const cartItem = createCartItem({ productId, price });\r\n    return this._cartStore.add(cartItem);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { EntityState, EntityStore, StoreConfig } from '@datorama/akita';\r\nimport { Product } from './../../product/state/product.model';\r\nimport { CartItem } from './cart.model';\r\n\r\nexport interface CartState extends EntityState<CartItem> {}\r\n\r\n@Injectable({ providedIn: 'root' })\r\n@StoreConfig({ name: 'cart', idKey: 'productId' })\r\nexport class CartStore extends EntityStore<CartState, CartItem> {\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  updateQuantity(productId: Product['id']) {\r\n    this.update(productId, entity => {\r\n      const quantity = entity.quantity + 1;\r\n      const total = entity.price * quantity;\r\n      return { ...entity, quantity, total };\r\n    });\r\n  }\r\n}\r\n","module.exports = \":host {\\r\\n  display: inline-block;\\r\\n}\\r\\n.product-list {\\r\\n  display: flex;\\r\\n  flex-flow: row wrap;\\r\\n}\\r\\n\"","module.exports = \"<h2 class=\\\"title is-2\\\">List Products</h2>\\n<div class=\\\"product-list\\\">\\n  <ae-product\\n    *ngFor=\\\"let p of (products$ | async)\\\"\\n    [product]=\\\"p\\\"\\n  ></ae-product>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Product, ProductQuery } from '../../state';\n\n@Component({\n  selector: 'ae-product-list',\n  templateUrl: './product-list.component.html',\n  styleUrls: ['./product-list.component.css']\n})\nexport class ProductListComponent implements OnInit {\n  products$: Observable<Product[]>;\n\n  constructor(private _productQuery: ProductQuery) {}\n\n  ngOnInit() {\n    this.products$ = this._productQuery.selectAll();\n  }\n}\n","module.exports = \":host {\\r\\n  border: solid salmon 1px;\\r\\n  display: flex;\\r\\n  flex-flow: row;\\r\\n  width: 100%;\\r\\n}\\r\\n@media (min-width: 768px) {\\r\\n  :host {\\r\\n    width: 50%;\\r\\n  }\\r\\n}\\r\\n@media screen and (min-width: 1024px) {\\r\\n  :host {\\r\\n    width: 33%;\\r\\n  }\\r\\n}\\r\\n@media screen and (min-width: 1440px) {\\r\\n  :host {\\r\\n    width: 25%;\\r\\n  }\\r\\n}\\r\\ndiv {\\r\\n  min-width: 150px;\\r\\n}\\r\\n\"","module.exports = \"<div>\\n  <img [src]=\\\"imgSrc\\\" alt=\\\"photo og product\\\">\\n</div>\\n<div>\\n  <p>{{name}}</p>\\n  <p>{{description}}</p>\\n  <p>{{price | currency }}</p>\\n  <button class=\\\"button is-primary\\\" (click)=\\\"addCart()\\\"> add </button>\\n</div>\\n\"","import { Component, Input, OnInit } from '@angular/core';\nimport { Product } from '../../state';\nimport { CartService } from './../../../cart/state/cart.service';\n\n@Component({\n  selector: 'ae-product',\n  templateUrl: './product.component.html',\n  styleUrls: ['./product.component.css']\n})\nexport class ProductComponent implements OnInit {\n  @Input()\n  product: Product;\n\n  name: string;\n  description: string;\n  imgSrc: string;\n  price: number;\n\n  constructor(private _cartService: CartService) {}\n\n  ngOnInit() {\n    this.name = this.product.name;\n    this.description = this.product.desc;\n    this.imgSrc = this.product.imageUrl;\n    this.price = this.product.price;\n  }\n\n  addCart() {\n    this._cartService.addProdcutToCart(this.product);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { HttpClientModule } from '@angular/common/http';\nimport { NgModule } from '@angular/core';\nimport { ProductComponent } from './components/product/product.component';\nimport { ProductListComponent } from './components/product-list/product-list.component';\n\n@NgModule({\n  imports: [CommonModule, HttpClientModule],\n  declarations: [ProductComponent, ProductListComponent],\n  exports: [ProductComponent, ProductListComponent]\n})\nexport class ProductModule {}\n","export * from './product.query';\nexport * from './product.store';\nexport * from './product.service';\nexport * from './product.model';\n","import { ID } from '@datorama/akita';\n\nexport interface Product {\n  id: ID;\n  name: string;\n  desc: string;\n  imageUrl: string;\n  price: number;\n}\n\nexport function createProduct(params: Partial<Product>) {\n  return {} as Product;\n}\n","import { Injectable } from '@angular/core';\nimport { QueryEntity } from '@datorama/akita';\nimport { ProductStore, ProductState } from './product.store';\nimport { Product } from './product.model';\n\n@Injectable({ providedIn: 'root' })\nexport class ProductQuery extends QueryEntity<ProductState, Product> {\n\n  constructor(protected store: ProductStore) {\n    super(store);\n  }\n\n}\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Product } from './product.model';\r\nimport { ProductStore } from './product.store';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class ProductService {\r\n  constructor(private productStore: ProductStore, private http: HttpClient) {\r\n    if (this.productStore.isPristine) {\r\n      this.initData();\r\n    }\r\n  }\r\n\r\n  get() {\r\n    this.http\r\n      .get<Array<Product>>(\r\n        'https://5bb0aa726418d70014071ba2.mockapi.io/cool-phone'\r\n      )\r\n      .subscribe(products => {\r\n        this.productStore.set(products);\r\n      });\r\n  }\r\n\r\n  add() {\r\n    // this.http.post().subscribe((entity: ServerResponse) => {\r\n    // this.productStore.add(entity);\r\n    // });\r\n    // this.productStore.add({ ID: 0 });\r\n  }\r\n\r\n  private initData(): void {\r\n    this.get();\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { EntityState, EntityStore, StoreConfig } from '@datorama/akita';\nimport { Product } from './product.model';\n\nexport interface ProductState extends EntityState<Product> {}\n\n@Injectable({ providedIn: 'root' })\n@StoreConfig({ name: 'product' })\nexport class ProductStore extends EntityStore<ProductState, Product> {\n\n  constructor() {\n    super();\n  }\n\n}\n\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\nimport { persistState, enableAkitaProdMode } from '@datorama/akita';\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n  enableAkitaProdMode();\n}\n\npersistState();\n\nplatformBrowserDynamic()\n  .bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}